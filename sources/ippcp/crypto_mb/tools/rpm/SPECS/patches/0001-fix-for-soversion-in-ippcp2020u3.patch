diff --git a/sources/ippcp/crypto_mb/CMakeLists.txt b/sources/ippcp/crypto_mb/CMakeLists.txt
index 4f690fc7..e84761fa 100644
--- a/sources/ippcp/crypto_mb/CMakeLists.txt
+++ b/sources/ippcp/crypto_mb/CMakeLists.txt
@@ -20,6 +20,14 @@ project("crypto_mb" C)
 set(MB_DYN_LIB_TARGET "crypto_mb") # Dynamic library
 set(MB_STATIC_LIB_TARGET "crypto_mb_s") # Static library
 
+include("${CMAKE_CURRENT_SOURCE_DIR}/src/cmake/crypto_mb-utils.cmake")
+mbx_getlibversion("${CMAKE_CURRENT_SOURCE_DIR}/include/crypto_mb/version.h")
+if ((NOT DEFINED MBX_VER_MAJOR) OR
+    (NOT DEFINED MBX_VER_MINOR) OR
+    (NOT DEFINED MBX_VER_REV))
+    message(WARNING "Cannot parse version from crypto_mb/version.h file. The project might be corrupted.")
+endif()
+
 set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)
 if("${CMAKE_BUILD_TYPE}" STREQUAL "")
     message(STATUS "CMAKE_BUILD_TYPE is unset, defaulting to Release")
diff --git a/sources/ippcp/crypto_mb/src/CMakeLists.txt b/sources/ippcp/crypto_mb/src/CMakeLists.txt
index 9aa6b795..3737f56f 100644
--- a/sources/ippcp/crypto_mb/src/CMakeLists.txt
+++ b/sources/ippcp/crypto_mb/src/CMakeLists.txt
@@ -65,6 +65,10 @@ if(NOT MB_LIB_OBJ_TARGET)
     set_target_properties(${MB_DYN_LIB_TARGET} PROPERTIES C_VISIBILITY_PRESET hidden)
     set_target_properties(${MB_DYN_LIB_TARGET} PROPERTIES VISIBILITY_INLINES_HIDDEN ON)
     set_target_properties(${MB_DYN_LIB_TARGET} PROPERTIES LINK_FLAGS "${LINK_FLAGS_DYNAMIC} ${LINK_FLAG_SECURITY}")
+    if(UNIX)
+        set_target_properties(${MB_DYN_LIB_TARGET} PROPERTIES  VERSION   ${MBX_VER_FULL}
+                                                               SOVERSION ${MBX_VER_MAJOR})
+    endif()
 
     if(NOT OPENSSL_DISABLE)
         target_link_libraries(${MB_DYN_LIB_TARGET} OpenSSL::Crypto) # to get includes
diff --git a/sources/ippcp/crypto_mb/src/cmake/crypto_mb-utils.cmake b/sources/ippcp/crypto_mb/src/cmake/crypto_mb-utils.cmake
new file mode 100644
index 00000000..131bb4ac
--- /dev/null
+++ b/sources/ippcp/crypto_mb/src/cmake/crypto_mb-utils.cmake
@@ -0,0 +1,36 @@
+#===============================================================================
+# Copyright 2019-2020 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#===============================================================================
+
+macro(mbx_getlibversion VERSION_FILE)
+    unset(MBX_VER_MAJOR)
+    unset(MBX_VER_MINOR)
+    unset(MBX_VER_REV)
+    unset(MBX_VER_FULL)
+    file(STRINGS "${VERSION_FILE}" FILE_CONTENTS)
+    foreach(LINE ${FILE_CONTENTS})
+        if ("${LINE}" MATCHES "#define +MBX_VER_MAJOR")
+            string(REGEX REPLACE "^#define +MBX_VER_MAJOR +\([0-9]+\).*$" "\\1" MBX_VER_MAJOR ${LINE})
+        endif()
+        if ("${LINE}" MATCHES "#define +MBX_VER_MINOR")
+            string(REGEX REPLACE "^#define +MBX_VER_MINOR +\([0-9]+\).*$" "\\1" MBX_VER_MINOR ${LINE})
+        endif()
+        if ("${LINE}" MATCHES "#define +MBX_VER_REV")
+            string(REGEX REPLACE "^#define +MBX_VER_REV +\([0-9]+\).*$" "\\1" MBX_VER_REV ${LINE})
+        endif()
+    endforeach()
+    set(MBX_VER_FULL "${MBX_VER_MAJOR}.${MBX_VER_MINOR}.${MBX_VER_REV}")
+    unset(FILE_CONTENTS)
+endmacro(mbx_getlibversion)
